import pytest
from top_k_elements import *

@pytest.mark.parametrize("nums, k, init_expected, add_fcn_args, add_expected", [
    ([3, 4, 5], 2, 4, [40, 50, 30, 60], [5, 40, 40, 50]),
    ([4, 2, 1, 3, 5, 8], 5, 2, [], []),
    ([122, 67, 89, 34, 23, 156, 132, 99, 94, 67, 72, 107, 103, 83, 125, 54, 48, 58], 6, 103, [], []),
    ([-8, -11, -7, -9, -12, -10, -20, -33, -14, -17, -42, -8, -47, -72, -89, -16, -15, -26, -38, -44, -52, 57, -68, -90], 8, -12, [], []),
    ([-2, 8, 0, -5, 7, -1, 3, -3, -4, 1, 4, -8, -9, 2, -7, 6, -6, 9], 10, -1, [], []),
    ([4, 5, 8, 2], 3, 4, [3, 5, 10, 9, 4], [4, 5, 5, 8, 8]), 
    ([1, 2, 3, 4, 5, -1, -5, 50, 80], 5, 3, [-1, -5, 50, 80, 100, 123, 38], [3, 3, 4, 5, 50, 50, 50]), 
    ([-10, 10, -30, 20], 3, -10, [40, 10, 70, 5], [10, 10, 20, 20]), 
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 8, 3, [-1, -2, -3, -4, -5, -6, -7, -8, -9, -10], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), 
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 6, 5, [11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [6, 7, 8, 9, 10, 11, 12, 13, 14, 15])
])
def test_k_th_largest(nums, k, init_expected, add_fcn_args, add_expected):
    k_th_largest = KthLargest(nums, k)
    assert k_th_largest.peek() == init_expected
    for i, num in enumerate(add_fcn_args):
        assert k_th_largest.add(num) == add_expected[i]