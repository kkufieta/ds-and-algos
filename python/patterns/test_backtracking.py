import pytest
from backtracking import *

@pytest.mark.parametrize("grid, sr, sc, target, expected", [
    ([[1,1,0,1], [0,1,1,1], [1,0,0,1], [1,1,1,1]], 1, 3, 3, [[3,3,0,3], [0,3,3,3], [3,0,0,3], [3,3,3,3]]),
    ([[1,0,2], [0,2,1], [2,0,1], [1,2,1]], 1, 2, 3, [[1,0,2], [0,2,3], [2,0,3], [1,2,3]]),
    ([[5,2,4], [4,4,7], [3,4,6]], 2, 2, 0, [[5,2,4], [4,4,7], [3,4,0]]),
    ([[1, 1, 0, 1], [0, 0, 1, 1], [0, 1, 1, 0], [1, 1, 0, 1]], 1, 2, 3, [[1, 1, 0, 3], [0, 0, 3, 3], [0, 3, 3, 0], [3, 3, 0, 1]]),
    ([[4, 4, 1, 4], [1, 4, 1, 4], [4, 4, 4, 1], [1, 4, 1, 4]], 2, 2, 2, [[2, 2, 1, 4], [1, 2, 1, 4], [2, 2, 2, 1], [1, 2, 1, 4]]),
    ([[1, 1, 1, 1], [1, 2, 2, 1], [1, 2, 2, 1], [1, 1, 1, 1]], 1, 3, 1, [[1, 1, 1, 1], [1, 2, 2, 1], [1, 2, 2, 1], [1, 1, 1, 1]]),
    ([[1,1,0,1,0],[0,0,0,0,1],[0,0,0,1,1],[1,1,1,1,0],[1,0,0,0,0]] , 4 , 3 , 3, [[1,1,0,1,0],[0,0,0,0,1],[0,0,0,1,1],[1,1,1,1,3],[1,3,3,3,3]]),
    ([[3,3,6,3,6],[6,6,6,6,3],[6,6,6,3,3],[3,3,3,3,6],[3,6,6,6,6]] , 4 , 3 , 7, [[3,3,6,3,6],[6,6,6,6,3],[6,6,6,3,3],[3,3,3,3,7],[3,7,7,7,7]]),
    ([[0,0,0],[0,0,0],[0,0,0]] , 0 , 0 , 1, [[1,1,1],[1,1,1],[1,1,1]]),
    ([[1,1,1],[1,1,1],[1,1,1]] , 1 , 1 , 2, [[2,2,2],[2,2,2],[2,2,2]]),
    ([[1,2,3],[4,5,6],[7,8,9]] , 0 , 0 , 10, [[10,2,3],[4,5,6],[7,8,9]]),
    ([[1,1,1],[1,1,1],[1,1,1]] , 2 , 2 , 1, [[1,1,1],[1,1,1],[1,1,1]]),
    ([[1,1,0,1],[0,0,0,0],[0,0,0,1],[1,1,1,1]] , 2 , 3 , 2, [[1,1,0,1],[0,0,0,0],[0,0,0,2],[2,2,2,2]]),
    ([[1,1,0,0],[0,1,0,0],[0,1,1,0],[1,0,1,0]] , 2 , 3 , 0, [[1,1,0,0],[0,1,0,0],[0,1,1,0],[1,0,1,0]]),
    ([[1,2,0,0],[3,1,3,6],[7,2,1,5],[1,9,2,1]] , 1 , 1 , 4, [[1,2,0,0],[3,4,3,6],[7,2,1,5],[1,9,2,1]]),
    # Edge cases
    ([[]], 0, 0, 2, [[]]),  # Empty grid
    ([[1]], 0, 0, 2, [[2]]),  # Single element grid
    ([[1,1,1],[1,1,1],[1,1,1]], 0, 0, 1, [[1,1,1],[1,1,1],[1,1,1]]),  # No change needed
    ([[1,1,1],[1,1,1],[1,1,1]], 0, 0, 0, [[0,0,0],[0,0,0],[0,0,0]]),  # Change all elements
    ([[1,2,3],[4,5,6],[7,8,9]], 2, 2, 9, [[1,2,3],[4,5,6],[7,8,9]]),  # Target is the same as the starting element
    ([[1,2,3],[4,5,6],[7,8,9]], 2, 2, 10, [[1,2,3],[4,5,6],[7,8,10]]),  # Change only one element
])
def test_flood_fill(grid, sr, sc, target, expected):
    assert flood_fill(grid, sr, sc, target) == expected
